KEY: expression_statement      -> set(['return', '(', 'else', 'while', 'NUM', '{', ';', '}', 'ID', 'if'])
KEY: argument_list'            -> set([')'])
KEY: relational_operator       -> set(['(', 'NUM', 'ID'])
KEY: param_list                -> set([])
KEY: declaration_list'         -> set(['$'])
KEY: var_declaration'          -> set(['return', '$', 'int', '(', 'void', 'float', 'ID', 'while', 'NUM', '{', '}', ';', 'if'])
KEY: term'                     -> set(['>=', '==', ']', '+', '<=', '-', ',', ')', ';', '!=', '<', '>'])
KEY: local_declarations'       -> set(['return', '(', 'ID', 'while', 'NUM', ';', '}', '{', 'if'])
KEY: Program_declaration       -> set(['$'])
KEY: simple_expression         -> set([])
KEY: selection_statement'      -> set(['return', '(', 'else', 'while', 'NUM', '{', '}', ';', 'ID', 'if'])
KEY: iteration_statement       -> set(['return', '(', 'else', 'while', 'NUM', '{', ';', '}', 'ID', 'if'])
KEY: additive_expression       -> set(['>=', '==', ']', '<=', ',', ')', ';', '!=', '<', '>'])
KEY: type_specifier            -> set(['ID'])
KEY: expression''              -> set([')', ';', ']', ','])
KEY: compound_statement        -> set(['return', '$', 'int', '(', 'void', 'float', 'else', 'while', 'NUM', '{', ';', '}', 'ID', 'if'])
KEY: param_list'               -> set([')'])
KEY: selection_statement       -> set(['return', '(', 'else', 'while', 'NUM', '{', ';', '}', 'ID', 'if'])
KEY: param                     -> set([')', ','])
KEY: return_statement          -> set(['return', '(', 'else', 'while', 'NUM', '{', ';', '}', 'ID', 'if'])
KEY: var_declaration           -> set(['return', 'int', '(', 'void', 'float', 'while', 'NUM', '{', ';', '}', 'ID', 'if'])
KEY: params                    -> set([')'])
KEY: argument_list             -> set([')'])
KEY: params'                   -> set([')'])
KEY: factor                    -> set(['<=', '>=', '==', ']', '+', '*', '-', ',', '/', ')', ';', '!=', '<', '>'])
KEY: var                       -> set([])
KEY: statement_list'           -> set(['}'])
KEY: declaration'              -> set(['int', 'void', 'float', '$'])
KEY: additive_operator         -> set(['(', 'NUM', 'ID'])
KEY: statement                 -> set(['return', '(', 'ID', 'while', 'NUM', ';', 'else', '}', '{', 'if'])
KEY: multiplicative_operator   -> set(['(', 'NUM', 'ID'])
KEY: args                      -> set([')'])
KEY: expression'               -> set([')', ';', ']', ','])
KEY: var'                      -> set(['<=', '>=', ']', '==', '!=', '+', '*', '-', ',', '/', ')', ';', '=', '<', '>'])
KEY: simple_expression'        -> set([')', ';', ']', ','])
KEY: return_statement'         -> set(['return', '(', 'else', 'while', 'NUM', '{', '}', ';', 'ID', 'if'])
KEY: declaration               -> set(['int', 'void', 'float', '$'])
KEY: param'                    -> set([')', ','])
KEY: term                      -> set(['>=', '==', ']', '+', '<=', '-', ',', ')', ';', '!=', '<', '>'])
KEY: declaration_list          -> set(['$'])
KEY: factor'                   -> set(['<=', '>=', '==', '!=', '+', '*', '-', ',', '/', ')', ';', ']', '<', '>'])
KEY: additive_expression'      -> set(['>=', '==', ']', '<=', ',', ')', ';', '!=', '<', '>'])
KEY: expression                -> set([')', ';', ']', ','])