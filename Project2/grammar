Program_declaration     -> declaration_list
declaration_list        -> declaration declaration_list'
declaration_list'       -> declaration declaration_list' | @
declaration             -> type_specifier ID declaration'
declaration'            -> var_declaration' | ( params ) compound_statement
var_declaration         -> type_specifier ID var_declaration'
var_declaration'        -> ; | [ NUM ] ;
type_specifier          -> int | float | void
params                  -> void params' | int ID param' param_list' | float ID param' param_list'
params'                 -> ID param' param_list' | @
param_list              -> param param_list'
param_list'             -> , param param_list' | @
param                   -> type_specifier ID param'
param'                  -> [ ] | @
compound_statement      -> { local_declarations' statement_list' }
local_declarations'     -> var_declaration local_declarations' | @
statement_list'         -> statement statement_list' | @
statement               -> expression_statement | compound_statement | selection_statement | iteration_statement | return_statement
expression_statement    -> expression ; | ;
selection_statement     -> if ( expression ) statement selection_statement'
selection_statement'    -> else statement | @
iteration_statement     -> while ( expression ) statement
return_statement        -> return return_statement'
return_statement'       -> expression ; | ;
expression              -> ID expression' | ( expression ) term' additive_expression' simple_expression' | NUM term' additive_expression' simple_expression'
expression'             -> var' expression'' | ( args ) term' additive_expression' simple_expression' | @
expression''            -> = expression | term' additive_expression' simple_expression' | @
var                     -> ID var'
var'                    -> [ expression ] | @
simple_expression       -> additive_expression simple_expression'
simple_expression'      -> relational_operator additive_expression | @
relational_operator     -> <= | < | > | >= | == | !=
additive_expression     -> term additive_expression'
additive_expression'    -> additive_operator term additive_expression' | @
additive_operator       -> + | -
term                    -> factor term'
term'                   -> multiplicative_operator factor term' | @
multiplicative_operator -> * | /
factor                  -> ( expression ) | NUM | ID factor'
factor'                 -> ( args ) | [ expression ] | @
args                    -> argument_list | @
argument_list           -> expression argument_list'
argument_list'          -> , expression argument_list' | @
